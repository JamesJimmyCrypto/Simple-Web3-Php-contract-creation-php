<?php

namespace Tests\Fixtures;

use Tests\TestCase;

class ArrayFixture extends TestCase
{
    public static function validArrayEncoderData(): array
    {
        return
            [
                [
                    "type" => 'uint[]',
                    "values" => [1, 3],
                    "dynamic" => true,
                    "result" => '0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003',
                ],
                [
                    "type" => 'uint[2]',
                    "values" => [1, 3],
                    "dynamic" => false,
                    "result" => '0x00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003',
                ],
                [
                    "type" => 'string[2]',
                    "values" => ['hello', 'web3'],
                    "dynamic" => true,
                    "result" => '0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047765623300000000000000000000000000000000000000000000000000000000',
                ],
                [
                    "type" => 'string[]',
                    "values" => ['hello', 'web3'],
                    "dynamic" => true,
                    "result" => '0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047765623300000000000000000000000000000000000000000000000000000000',
                ]
            ];
    }

    public static function invalidArrayEncoderData(): array
    {
        return
            [
                [
                    "type" => 'uint[]',
                    "values" => 'dsfdf',
                ],
                [
                    "type" => 'uint[3]',
                    "values" => [1, 2],
                ],
            ];
    }
    public static function validArrayDecoderData(): array
    {
        return
            [
                /**[
                    "type" => 'uint[]',
                    "result" => [1, 3],
                    "bytes" => '0x000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003',
                    "remaining" => '0x',
                ],
                [
                    "type" => 'uint[2]',
                    "result" => [1, 3],
                    "bytes" => '0x00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003',

                    "remaining" => '0x',
                ],**/
                [
                    "type" => 'string[2]',
                    "result" => ['hello', 'web3'],
                    "bytes" => '0x00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047765623300000000000000000000000000000000000000000000000000000000',
                    "remaining" => '0x',
                ],
                /** 
                [
                    "type" => 'string[]',
                    "result" => ['hello', 'web3'],
                    "bytes" => '0x000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047765623300000000000000000000000000000000000000000000000000000000',
                    "remaining" => '0x',
                ],**/
            ];
    }



    public static function invalidArrayDecoderData(): array
    {
        return
            [
                [
                    "type" => 'uint[]',
                    "bytes" => '0x',
                ],
            ];
    }
}
